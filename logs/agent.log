INFO:     Will watch for changes in these directories: ['/home/lucas/anton_new']
INFO:     Uvicorn running on http://0.0.0.0:8001 (Press CTRL+C to quit)
INFO:     Started reloader process [34001] using WatchFiles
2025-08-08 17:14:56,837 - server.agent.code_indexer - INFO - Loaded metadata for 56 previously indexed files
INFO:     Started server process [34005]
INFO:     Waiting for application startup.
2025-08-08 17:14:56,837 - server.agent.agent_server - INFO - 🚀 Agent Server starting up...
2025-08-08 17:14:56,837 - server.agent.agent_server - INFO - Starting code indexing...
2025-08-08 17:14:56,837 - server.agent.agent_server - INFO - ✅ NVML Initialized for GPU monitoring.
INFO:     Application startup complete.
2025-08-08 17:14:56,840 - server.agent.agent_server - INFO - ✅ Code indexing complete. 0 files indexed.
2025-08-08 17:14:56,840 - server.agent.rag_manager - INFO - Saving knowledge base with 341 entries to disk...
2025-08-08 17:14:56,841 - server.agent.rag_manager - INFO - Knowledge base saved successfully.
2025-08-08 17:15:01,182 - server.agent.agent_server - INFO - Agent Server received request. Processing with ReAct agent...
🔧 Wrapped legacy tool: execute_python_code
🔧 Wrapped legacy tool: write_file
🔧 Wrapped legacy tool: read_file
🔧 Wrapped legacy tool: list_directory
ℹ️  Skipping WebSearchTool due to missing dependency: duckduckgo_search
✅ Enhanced ToolManager initialized.
🔍 Discovering tools...
⚠️  Warning: Failed to instantiate LegacyToolWrapper from legacy_wrapper.py: LegacyToolWrapper.__init__() missing 1 required positional argument: 'legacy_tool_instance'
🔧 Discovered tool: rebuild_code_index from rebuild_index_tool.py
ℹ️  Info: Skipping web_search.py due to missing dependency: duckduckgo_search
🔧 Discovered tool: get_codebase_stats from code_stats.py
🔧 Discovered tool: list_directory from file_management.py
🔧 Discovered tool: read_file from file_management.py
🔧 Discovered tool: write_file from file_management.py
🔧 Discovered tool: create_pull_request from git.py
🔧 Discovered tool: git_commit from git.py
🔧 Discovered tool: git_create_branch from git.py
🔧 Discovered tool: git_push from git.py
🔧 Discovered tool: git_status from git.py
🔧 Discovered tool: git_switch_branch from git.py
🔧 Discovered tool: check_learning_progress from learning_tools.py
🔧 Discovered tool: execute_python_code from coding.py
🔧 Discovered tool: search_codebase from code_search.py
🔧 Tool 'rebuild_code_index' registered.
🔧 Tool 'get_codebase_stats' registered.
🔧 Tool 'list_directory' registered.
🔧 Tool 'read_file' registered.
🔧 Tool 'write_file' registered.
🔧 Tool 'create_pull_request' registered.
🔧 Tool 'git_commit' registered.
🔧 Tool 'git_create_branch' registered.
🔧 Tool 'git_push' registered.
🔧 Tool 'git_status' registered.
🔧 Tool 'git_switch_branch' registered.
🔧 Tool 'check_learning_progress' registered.
🔧 Tool 'execute_python_code' registered.
🔧 Tool 'search_codebase' registered.
✅ Tool discovery complete. 14 tools registered.
🔧 Wrapped legacy tool: create_new_tool
🔧 Wrapped git tool: git_status
🔧 Wrapped git tool: git_commit
🔧 Wrapped git tool: git_push
🔧 Wrapped git tool: create_pull_request
🔧 Wrapped git tool: git_create_branch
🔧 Wrapped git tool: git_switch_branch
⚠️  Warning: Failed to instantiate LegacyToolWrapper from legacy_wrapper.py: LegacyToolWrapper.__init__() missing 1 required positional argument: 'legacy_tool_instance'
🔧 Discovered tool: rebuild_code_index from rebuild_index_tool.py
ℹ️  Info: Skipping web_search.py due to missing dependency: duckduckgo_search
🔧 Discovered tool: get_codebase_stats from code_stats.py
🔧 Discovered tool: list_directory from file_management.py
🔧 Discovered tool: read_file from file_management.py
🔧 Discovered tool: write_file from file_management.py
🔧 Discovered tool: create_pull_request from git.py
🔧 Discovered tool: git_commit from git.py
🔧 Discovered tool: git_create_branch from git.py
🔧 Discovered tool: git_push from git.py
🔧 Discovered tool: git_status from git.py
🔧 Discovered tool: git_switch_branch from git.py
🔧 Discovered tool: check_learning_progress from learning_tools.py
🔧 Discovered tool: execute_python_code from coding.py
🔧 Discovered tool: search_codebase from code_search.py
--- Discovering and Registering Tools ---
--- Tool Registration Complete: 14 tools registered ---
INFO:     192.168.1.250:44442 - "POST /v1/agent/chat HTTP/1.1" 200 OK
2025-08-08 17:15:01,208 - server.agent.agent_server - INFO - Starting ReAct agent processing...
2025-08-08 17:15:01,208 - server.agent.learning_loop - INFO - Learning loop tracking started for task: hi...
Batches:   0%|          | 0/1 [00:00<?, ?it/s]Batches: 100%|██████████| 1/1 [00:00<00:00,  9.39it/s]Batches: 100%|██████████| 1/1 [00:00<00:00,  9.37it/s]
2025-08-08 17:15:01,316 - server.agent.agent_server - INFO - ReAct iteration 1/30
2025-08-08 17:15:01,357 - httpx - INFO - HTTP Request: POST http://localhost:8000/v1/chat/stream "HTTP/1.1 200 OK"
2025-08-08 17:15:02,933 - server.agent.agent_server - INFO - Agent thinking: Okay, the user said "hi". I need to respond appropriately. Since they're greeting me, I should say hello back. Let me check if there's anything else they need. But the user just said "hi", so a simple friendly response should be enough. I'll go with a standard greeting.Wait, the rules say to use the ReAct pattern. But for a simple greeting, maybe I don't need to use any tools. Let me confirm: the available tools are for code operations, web search, etc. A greeting doesn't require any of those. So I should just respond directly.The instructions say if I have enough info, start with <final_answer>. Since it's just a hello, no tools needed. So I'll write a friendly "Hi! How can I assist you today?" as the final answer.
2025-08-08 17:15:03,102 - server.agent.agent_server - INFO - ReAct agent response: <think>Okay, the user said "hi". I need to respond appropriately. Since they're greeting me, I should say hello back. Let me check if there's anything else they need. But the user just said "hi", so a simple friendly response should be enough. I'll go with a standard greeting.Wait, the rules say to use the ReAct pattern. But for a simple greeting, maybe I don't need to use any tools. Let me confirm: the available tools are for code operations, web search, etc. A greeting doesn't require any of those. So I should just respond directly.The instructions say if I have enough info, start with <final_answer>. Since it's just a hello, no tools needed. So I'll write a friendly "Hi! How can I assist you today?" as the final answer.</think><final_answer>Hi! How can I assist you today?</final_answer>
2025-08-08 17:15:03,102 - server.agent.agent_server - INFO - Content after thinking: <final_answer>Hi! How can I assist you today?</final_answer>
2025-08-08 17:15:03,102 - server.agent.agent_server - INFO - Agent provided final response, ending ReAct loop
Batches:   0%|          | 0/1 [00:00<?, ?it/s]Batches: 100%|██████████| 1/1 [00:00<00:00, 431.29it/s]
2025-08-08 17:15:03,106 - server.agent.learning_loop - INFO - I learned:
{
    "prompt": "hi",
    "start_time": 1754687701.2083106,
    "actions": [],
    "success": true,
    "feedback": "<final_answer>Hi! How can I assist you today?</final_answer>",
    "steps_taken": 0,
    "end_time": 1754687703.1063015,
    "duration": 1.8979909420013428
}
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - --- AGENT SERVER REQUEST METRICS ---
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Latency] Full Request End-to-End: 1.90 seconds
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Throughput] Chunks per Second: 97.84
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Throughput] Total Chunks Streamed: 186
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Resources] Start - CPU: 4.8%, RAM: 15.4%, Util: GPU0:0.0%, GPU1:0.0%, VRAM: GPU0:79.7%, GPU1:2.1%
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Resources] End   - CPU: 6.7%, RAM: 16.0%, Util: GPU0:92.0%, GPU1:0.0%, VRAM: GPU0:80.0%, GPU1:2.1%
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - [Resources] Difference- CPU: +1.9%, RAM: +0.6%, Util: GPU0:+92.0%, GPU1:+0.0%, VRAM: GPU0:+0.2%, GPU1:+0.0%
2025-08-08 17:15:03,107 - server.agent.agent_server - INFO - ------------------------------------
